// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package integration

import (
	"github.com/gin-gonic/gin"
	"red-feed/internal/repository"
	"red-feed/internal/repository/cache"
	"red-feed/internal/repository/dao"
	"red-feed/internal/service"
	"red-feed/internal/web"
	"red-feed/ioc"
)

// Injectors from wire.go:

func InitWebServer() *gin.Engine {
	cmdable := ioc.InitRedis()
	v := ioc.InitMiddlewares(cmdable)
	db := ioc.InitDB()
	gormUserDAO := dao.NewUserDAO(db)
	redisUserCache := cache.NewUserCache(cmdable)
	cachedUserRepository := repository.NewUserRepository(gormUserDAO, redisUserCache)
	userService := service.NewUserService(cachedUserRepository)
	smsService := ioc.InitSMSService()
	redisCodeCache := cache.NewCodeCache(cmdable)
	cachedCodeRepository := repository.NewCodeRepository(redisCodeCache)
	codeService := service.NewCodeService(smsService, cachedCodeRepository)
	userHandler := web.NewUserHandler(userService, codeService)
	engine := ioc.InitWebServer(v, userHandler)
	return engine
}
